<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8" />
    <title>Hello World</title>
    <script src="https://unpkg.com/react@18/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>

    <!-- Don't use this in production: -->
    <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
  </head>
  <body>
    <div id="root"></div>
    <script type="text/babel">
      class Boat extends React.Component {
        constructor(props) {
          super(props);
        }
        render(){
          let {name, length, type} = this.props.boat;
          let url = `/detail/${name}`
          return (
            <div>
              <ul>
                <li>{name}</li>
                <li>{length}</li>
                <li>{type}</li>
              </ul>
              <form action={url} method="GET">
                <button type="submit">Details</button>
              </form>
            </div>
          )
        }
      }
      class Boats extends React.Component {
        constructor(props) {
          super(props);
        }
        render(){
          let boats = this.props.boats.map((boat) => {
            return <Boat boat={boat}></Boat>
          })
          return (<div>{boats}</div>)
        }
      }
      class App extends React.Component {
        constructor(props) {
          let boats = <%- boats %>
          super(props);
          this.state = { boats: boats }
        }
        componentDidMount(){
          console.log('App has mounted')
        }
        render(){
          return (
            <div>
              <Boats boats={this.state.boats}></Boats>
            </div>
          )
        }
      }
      function MyApp(props) {
        // super(props);
        // this.state={ user: 'test'}
        return <h1>Hello, world!</h1>;
      }

      const container = document.getElementById('root');
      const root = ReactDOM.createRoot(container);
      root.render(<App/>);

    </script>
    <!--
      Note: this page is a great way to try React but it's not suitable for production.
      It slowly compiles JSX with Babel in the browser and uses a large development build of React.

      Read this section for a production-ready setup with JSX:
      https://reactjs.org/docs/add-react-to-a-website.html#add-jsx-to-a-project

      In a larger project, you can use an integrated toolchain that includes JSX instead:
      https://reactjs.org/docs/create-a-new-react-app.html

      You can also use React without JSX, in which case you can remove Babel:
      https://reactjs.org/docs/react-without-jsx.html
    -->
  </body>
</html>